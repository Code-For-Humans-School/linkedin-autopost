extends layout

block content
  .container-fluid
    .container.custom-container
      //- Profile Dropdown Menu
      .profile-dropdown
        button#dropdownMenuButton.btn.btn-link(type='button', onclick='toggleDropdown()')
          img(src=userInfo[0].github_profileurl, alt='Profile Image', class='rounded-circle', style='width: 40px; height: 40px;')
        .dropdown-content#dropdownContent
          .dropdown-item(style="font-weight: bolder;") Hi, #{userInfo[0].github_username}
          .dropdown-divider(style="margin-left: 10px;")
          a.dropdown-item(href='/users/logout', style="display: flex; align-items: center;") 
            i.fa-solid.fa-arrow-right-from-bracket(style='margin-right: 8px;')
            span Log Out

      .text-center(style="margin-top: 50px; margin-bottom: 40px;")
        h1= title
        if error == 'logoutError'
          .alert.alert-danger(role='alert') There was an error logging you out! Please try again!
        if error == 'setWebhookError'
          .alert.alert-danger(role='alert') There was an error setting webhooks for the selected repo! Please try again!
        if githubRepoError
          .alert.alert-danger(role='alert') #{githubRepoError}
        //- if userInfo && userInfo.length > 0
        //-   p Welcome our GitHub guest: #{userInfo[0].github_username}
        //-   //- Logout Button
        //-   a.btn.btn-danger(href='/users/logout', style="margin-bottom: 20px;") Log Out

      //- Display GitHub Repositories
      if githubRepos && githubRepos.length > 0
        .row.no-gutters
          each repo in githubRepos
            .col-lg-4.col-md-6.col-sm-12.mb-4.custom-col
              .card.card-hover
                .card-body(data-repo-name=repo.name, webhook-repo-status=repo.hasSetWebhook, onclick=`showModal(event, ${currentPage}, ${perPage})`)
                  h5.card-title
                    span(style="color: #207fe0; font-weight: bolder; margin-right: 5px;")= repo.name
                    if repo.hasSetWebhook
                      i.bi.bi-check2-all(style="font-weight: bolder; font-size: 24px; color: green;")
                  p.card-text(style="color: #636c76;")= repo.description
                  .d-flex.align-items-center.flex-wrap
                    if repo.private
                      .badge.custom-badge(style="color: #636c76; font-weight: bold; border: 1px solid #d0d7de; border-radius: 10px;") Private
                    else
                      .badge.custom-badge(style="color: #636c76; font-weight: bold; border: 1px solid #d0d7de; border-radius: 10px;") Public
                    if repo.language
                      .badge.custom-badge(style="color: #776c76; display: flex; align-items: center; justify-content: center;")
                        span.circle(style="background-color: #f1df62; width: 12px; height: 12px; border-radius: 50%; display: inline-block; margin-right: 5px;")
                        | #{repo.language}
                    if repo.stars > 0
                      .badge.custom-badge(style="color: #776c76; font-weight: bold; display: flex; align-items: center; justify-content: center;")
                        i.fas.fa-star(style="margin-right: 5px;")
                        | #{repo.stars}
                    if repo.forks > 0
                      .badge.custom-badge(style="color: #776c76; font-weight: bold; display: flex; align-items: center; justify-content: center")
                        i.fas.fa-code-branch(style="margin-right: 5px;")
                        | #{repo.forks}
      else
        .alert.alert-info(role='alert') No repositories found.

      //- Pagination Component
      .pagination-container
        .d-flex.flex-column.flex-sm-row.justify-content-between.align-items-end
          .form-group.mb-2.mb-sm-0
            label(for="perPageSelect", style="color: #636c76; font-weight: bolder; font-size: 16px; margin-bottom: 10px;") Repositories per page:
            select.form-control#perPageSelect(name="per_page", onchange="location = this.value;", style="box-shadow: none;")
              option(value=`/?page=1&per_page=15` selected=perPage==15) 15
              option(value=`/?page=1&per_page=30` selected=perPage==30) 30
              option(value=`/?page=1&per_page=50` selected=perPage==50) 50
          .pagination
            if currentPage > 1
              li.page-item
                a.page-link(href=`/?page=${currentPage-1}&per_page=${perPage}`, style="color: #207fe0; font-weight: bolder; margin-right: 5px; border-radius: 8px; box-shadow: none;") 
                  i.bi.bi-arrow-left.custom-icon
                  span.d-none.d-sm-inline(style="margin-left: 3px;") Previous
            else 
              //- Empty placeholder to maintain spacing
              li.page-item
              
                   
            if githubRepos.length == perPage
              li.page-item
                a.page-link(href=`/?page=${currentPage+1}&per_page=${perPage}`, style="color: #207fe0; font-weight: bolder; margin-left: 5px; border-radius: 8px; box-shadow: none;")
                  span.d-none.d-sm-inline(style="margin-right: 3px;") Next  
                  i.bi.bi-arrow-right.custom-icon
            else 
              //- Empty placeholder to maintain spacing
              li.page-item

      //- Modal for editing repository
      .modal#repoModal(tabindex="-1" role="dialog" style="display: none;")
        .modal-dialog(role="document")
          .modal-content
            .modal-header(style="padding: 10px 0px 10px 10px; border: none;")
              h6.modal-title(style="color: #212121; font-weight: bold;") Auto-Post Config
            .modal-body(style="padding: 0px 10px; font-size: 14px; border: none;")
              span#repoWebhookStatus(style="color: #808080;") Placeholder for webhook setup info: You haven't setup webhook for the repo
              span#repoNameModal(style="color: #207fe0; font-weight: bolder;") Placeholder for the repo name: sample-repo-name
              span#repoWebhookAction(style="color: #808080;") Placeholder for the repo action: Do you want to set it up now? 
              //- Circular progress component
              .d-flex.flex-column.justify-content-center.align-items-center(style="margin-top: 10px;")
                .spinner-border.text-primary#loadingSpinner(role="status" style="display: none;")
                span#loadingText(style="color: #808080; margin-top: 5px; display: none;") Loading...
            .modal-footer(style="display: flex; justify-content: flex-end; padding: 5px; border: none;")
              button.btn.btn-outline-secondary.btn-sm(type="button", data-dismiss="modal", style="border: none; font-weight: bolder;") Cancel
              button.btn.btn-outline-primary.btn-sm#repoActionButton(type="button", style="border: none;  font-weight: bolder;") Confirm
              

  //- Custom Styles
  style.
    .profile-dropdown {
      position: absolute;
      top: 10px;
      right: 10px;
      //- z-index: 1051;
    }
    .dropdown-content {
      display: none;
      position: absolute;
      background-color: white;
      min-width: 160px;
      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
      z-index: 1052;
      border-radius: 10px;
      right: 0px;
      top: 50px;
      overflow: hidden;
      padding-right: 10px;
    }
    .dropdown-content .dropdown-item {
      padding: 12px 16px;
      text-decoration: none;
      display: block;
      color: black;
      border-radius: 10px;
      margin: 5px;
    }
    .dropdown-content .dropdown-item:hover {
      background-color: #f5f5f5;
    }
    .dropdown-content .dropdown-divider {
      height: 1px;
      margin: .5rem 0;
      //- overflow: hidden;
      background-color: #eceeef;
    }
    .show {
      display: block;
    }
    .custom-badge:not(:first-child) {
      margin-left: 0px;
    }
    .card-hover {
      cursor: pointer;
      transition: transform 0.3s ease;
    }
    .card-hover:hover {
      transform: scale(1.02);
    }
    .custom-col {
      padding-left: 10px;
      padding-right: 10px;
    }
    .custom-container {
      max-width: 1300px;
    }
    .container-fluid {
      padding-left: 30px;
      padding-right: 30px;
      padding-bottom: 60px;
    }
    @media (max-width: 576px) {
      .container-fluid {
        padding-left: 10px;
        padding-right: 10px;
      }
      .pagination {
        width: 100%;
        justify-content: space-between;
      }
      .form-group {
        width: 100%;
      }
    }
    .custom-icon {
      font-size: 20px;
      font-weight: bolder;
      color: #207fe0;
    }

    .page-link {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .modal {
      position: fixed;
      z-index: 1050;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      outline: 0;
      background: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(5px);
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .modal-dialog {
      margin: 20px;
      max-width: 450px;
    }
    .modal-content {
      background-color: #fff;
      border: 1px solid #dee2e6;
      border-radius: 0.3rem;
      box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
      outline: 0;
    }
    .modal-header {
      display: flex;
      align-items: flex-start;
      justify-content: space-between;
      padding: 1rem;
      border-bottom: 1px solid #dee2e6;
      border-top-left-radius: 0.3rem;
      border-top-right-radius: 0.3rem;
    }
    .modal-body {
      position: relative;
      padding: 1rem;
      line-height: 20px;
    }
    .modal-footer {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      padding: 1rem;
      border-top: 1px solid #dee2e6;
    }

  //- Custom Script
  script.
    function toggleDropdown() {
        document.getElementById('dropdownContent').classList.toggle('show');
    }

    function showModal(event, currentPage, perPage) {
      const repoName = event.currentTarget.getAttribute('data-repo-name');
      const hasSetWebhook = event.currentTarget.getAttribute('webhook-repo-status');

      if(hasSetWebhook != null) {
        document.getElementById('repoWebhookStatus').innerText = "You've already set up linkedin-auto-post for the repository ";
        document.getElementById('repoNameModal').innerText = repoName;
        document.getElementById('repoWebhookAction').innerText = ". Do you want to revoke it?";

        document.getElementById('repoActionButton').innerText = "Revoke"
        // Update the href attribute of the button
        //- document.getElementById('repoWebhookAction').href = `/webhook/config?repo=${repoName}&hassetwebhook=true&page=${currentPage}&per_page=${perPage}`;
        document.getElementById('repoActionButton').setAttribute('onclick', `handleRepoAction('${repoName}', true, ${currentPage}, ${perPage})`);

      } else {
        document.getElementById('repoWebhookStatus').innerText = "You haven't set up linkedin-auto-post for the repository ";
        document.getElementById('repoNameModal').innerText = repoName;
        document.getElementById('repoWebhookAction').innerText = ". Do you want to set it up now?";

        document.getElementById('repoActionButton').innerText = "Set Now"
        //- document.getElementById('repoWebhookAction').href = `/webhook/config?repo=${repoName}&hassetwebhook=false&page=${currentPage}&per_page=${perPage}`;
        document.getElementById('repoActionButton').setAttribute('onclick', `handleRepoAction('${repoName}', false, ${currentPage}, ${perPage})`);
      }
      //- document.getElementById('repoNameModal').innerText = repoName + " - Do you want to modify it?";
      const modal = document.getElementById('repoModal');
      modal.style.display = 'flex';
    }

    function handleRepoAction(repoName, hasSetWebhook, currentPage, perPage) {
      // Save the scroll position
      const scrollY = window.scrollY;

      // Show the spinner and disable the button
      document.getElementById('loadingSpinner').style.display = 'block';
      document.getElementById('loadingText').style.display = 'block';
      document.getElementById('repoActionButton').disabled = true;

      fetch(`/webhook/config?repo=${repoName}&hassetwebhook=${hasSetWebhook}&page=${currentPage}&per_page=${perPage}`)
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            //- const repoCard = document.querySelector(`.card-body[data-repo-name="${repoName}"]`);
            //- const webhookIcon = repoCard.querySelector('.bi-check2-all');
            //- if (hasSetWebhook) {
            //-   if (webhookIcon) webhookIcon.remove();
            //- } else {
            //-   if (!webhookIcon) {
            //-     const icon = document.createElement('i');
            //-     icon.className = 'bi bi-check2-all';
            //-     icon.style = 'font-weight: bolder; font-size: 24px; color: green;';
            //-     repoCard.querySelector('h5.card-title').appendChild(icon);
            //-   }
            //- }
            //- repoCard.setAttribute('webhook-repo-status', data.hasSetWebhook);

            // Store the scroll position in localStorage
            localStorage.setItem("scrollY", scrollY);
            // Refresh the page
            window.location.href = `/?page=${currentPage}&per_page=${perPage}`;
            document.getElementById('repoModal').style.display = 'none';
          }
        })
        .catch(error => {
          console.error('Error:', error);
          document.getElementById('repoModal').style.display = 'none';
        });
    }

    window.onclick = function(event) {
      // If the user clicks outside of the drop down menu, close the drop down menu
      if (!event.target.matches('#dropdownMenuButton') && !event.target.closest('.profile-dropdown')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        //- dropdowns.style.display = 'none';
        //- document.getElementById('dropdownContent').classList.toggle('show');
        for (var i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }

      // If the user clicks places outside of the .modal-dialog, which is .modal, close the dialog window
      const modal = document.getElementById('repoModal');
      if (event.target == modal) {
        modal.style.display = 'none';
      }
    }

    document.querySelectorAll('.modal .close, .modal .btn-outline-secondary').forEach(button => {
      button.onclick = function() {
        const modal = document.getElementById('repoModal');
        modal.style.display = 'none';
      }
    });

    document.addEventListener('DOMContentLoaded', (event) => {
      const scrollY = localStorage.getItem('scrollY');
      if (scrollY) {
        window.scrollTo(0, parseInt(scrollY, 10));
        localStorage.removeItem('scrollY'); // Clean up after restoring
      }
    });